#include "miru_core_common.h"
#if defined(MIRU_D3D12)
#include "D3D12Context.h"
#include "D3D12Sync.h"
#include "D3D12Shader.h"

using namespace miru;
using namespace d3d12;

HMODULE Context::s_HModeuleDXIL;
std::filesystem::path Context::s_DXILFullpath;
uint32_t Context::s_RefCount = 0;

Context::Context(Context::CreateInfo* pCreateInfo)
{
	MIRU_CPU_PROFILE_FUNCTION();

	m_CI = *pCreateInfo;

	//Setup Debug
	#if defined(_DEBUG)
	m_CI.debugValidationLayers = true;
	#endif
	if (m_CI.debugValidationLayers)
	{
		MIRU_ASSERT(D3D12GetDebugInterface(IID_PPV_ARGS(&m_Debug)), "ERROR: D3D12: Failed to get DebugInterface.");
		m_Debug->EnableDebugLayer();
		#if !defined(MIRU_WIN64_UWP)
		reinterpret_cast<ID3D12Debug1*>(m_Debug)->SetEnableGPUBasedValidation(true);
		#endif
	}

	//Create Factory
	UINT createFactoryFlags = 0;
	if (m_CI.debugValidationLayers)
		createFactoryFlags = DXGI_CREATE_FACTORY_DEBUG;
	MIRU_ASSERT(CreateDXGIFactory2(createFactoryFlags, IID_PPV_ARGS(&m_Factory)), "ERROR: D3D12: Failed to create IDXGIFactory4.");

	//Create PhysicalDevices
	m_PhysicalDevices = PhysicalDevices(m_Factory);

	//Load dxil.dll
	if (!s_HModeuleDXIL)
	{
		s_DXILFullpath = base::Shader::GetLibraryFullpath_dxil();
		s_HModeuleDXIL = base::Shader::LoadLibrary_dxil();
		if (!s_HModeuleDXIL)
		{
			std::string error_str = "WARN: D3D12: Unable to load '" + s_DXILFullpath.generic_string() + "'.";
			MIRU_WARN(GetLastError(), error_str.c_str());
		}
	}
	s_RefCount++;

	//Check provide feature level
	D3D_FEATURE_LEVEL featureLevel;
	for (size_t i = 0; i < _countof(m_Features.featureLevelsList); i++)
	{
		featureLevel = m_Features.featureLevelsList[i];
		HRESULT res = D3D12CreateDevice(m_PhysicalDevices.m_PDIs[0].m_Adapter, featureLevel, __uuidof(ID3D12Device), nullptr);
		if (res == S_FALSE)
			break;
		else
			continue;
	}
	m_RI.apiVersionMajor = (((uint32_t)(featureLevel) >> 12) & 0xFU);
	m_RI.apiVersionMinor = (((uint32_t)(featureLevel) >> 8) & 0xFU);
	m_RI.apiVersionPatch = 0;
	
	//Create Device
	MIRU_ASSERT(D3D12CreateDevice(m_PhysicalDevices.m_PDIs[0].m_Adapter, featureLevel, IID_PPV_ARGS(&m_Device)), "ERROR: D3D12: Failed to create Device."); //We only use the first PhysicalDevice
	D3D12SetName(m_Device, m_CI.deviceDebugName);

	//Enumerate D3D12 Device Features
	m_Features = Features(m_Device);

	m_RI.activeExtensions = ExtensionsBit::DYNAMIC_RENDERING;
	if (m_Features.d3d12Options5.RaytracingTier > D3D12_RAYTRACING_TIER_NOT_SUPPORTED)
		m_RI.activeExtensions |= ExtensionsBit::RAY_TRACING;
	if (m_Features.d3d12Options3.ViewInstancingTier > D3D12_RAYTRACING_TIER_NOT_SUPPORTED)
		m_RI.activeExtensions |= ExtensionsBit::MULTIVIEW;
	if (m_Features.d3d12Options.VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation)
		m_RI.activeExtensions |= ExtensionsBit::SHADER_VIEWPORT_INDEX_LAYER;
	

	//Create Info Queue
	m_Device->QueryInterface(IID_PPV_ARGS(&m_InfoQueue));
	if (m_InfoQueue)
	{
		m_InfoQueue->SetBreakOnSeverity(D3D12_MESSAGE_SEVERITY_ERROR, true);
		m_InfoQueue->SetBreakOnSeverity(D3D12_MESSAGE_SEVERITY_WARNING, false);

		D3D12_MESSAGE_ID filteredMessageIDs[2] = { D3D12_MESSAGE_ID_CLEARRENDERTARGETVIEW_MISMATCHINGCLEARVALUE, D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_MISMATCHINGCLEARVALUE };
		D3D12_INFO_QUEUE_FILTER filter = {};
		filter.DenyList.pIDList = filteredMessageIDs;
		filter.DenyList.NumIDs = _countof(filteredMessageIDs);
		m_InfoQueue->AddStorageFilterEntries(&filter);

		reinterpret_cast<ID3D12InfoQueue1*>(m_InfoQueue)->RegisterMessageCallback(MessageCallbackFunction, D3D12_MESSAGE_CALLBACK_FLAG_NONE, this, &m_CallbackCookie);
	}

	//Create Queues
	m_QueueDescs.resize(3);
	m_Queues.resize(3);

	for (size_t i = 0; i < m_Queues.size(); i++)
	{
		m_QueueDescs[i].Type = i == 0 ? D3D12_COMMAND_LIST_TYPE_DIRECT : i == 1 ? D3D12_COMMAND_LIST_TYPE_COMPUTE : i == 2 ? D3D12_COMMAND_LIST_TYPE_COPY : D3D12_COMMAND_LIST_TYPE_DIRECT;
		m_QueueDescs[i].Priority = 0;
		m_QueueDescs[i].Flags = D3D12_COMMAND_QUEUE_FLAG_NONE;
		m_QueueDescs[i].NodeMask = 0;
		MIRU_ASSERT(m_Device->CreateCommandQueue(&m_QueueDescs[i], IID_PPV_ARGS(&m_Queues[i])), "ERROR: D3D12: Failed to create CommandQueue.");

		std::string typeStr = i == 0 ? "Direct" : i == 1 ? "Compute" : i == 2 ? "Copy" : "";
		D3D12SetName(m_Queues[i], m_CI.deviceDebugName + ": Queue - " + typeStr);
	}
}

Context::~Context()
{
	MIRU_CPU_PROFILE_FUNCTION();

	s_RefCount--;
	if (!s_RefCount)
	{
		if (!FreeLibrary(s_HModeuleDXIL))
		{
			std::string error_str = "WARN: D3D12: Unable to free'" + s_DXILFullpath.generic_string() + "'.";
			MIRU_WARN(GetLastError(), error_str.c_str());
		}
	}

	reinterpret_cast<ID3D12InfoQueue1*>(m_InfoQueue)->UnregisterMessageCallback(m_CallbackCookie);

	ID3D12DebugDevice* debugDevice = nullptr;
	m_Device->QueryInterface(&debugDevice);

	for (auto& queue : m_Queues)
		MIRU_D3D12_SAFE_RELEASE(queue);

	MIRU_D3D12_SAFE_RELEASE(m_Device);

	for (auto& physicalDeviceInfo : m_PhysicalDevices.m_PDIs)
		MIRU_D3D12_SAFE_RELEASE(physicalDeviceInfo.m_Adapter);

	MIRU_D3D12_SAFE_RELEASE(m_Factory);

	if (debugDevice)
	{
		debugDevice->ReportLiveDeviceObjects(D3D12_RLDO_IGNORE_INTERNAL);
		debugDevice->Release();
	}
}

Context::PhysicalDevices::PhysicalDevices(IDXGIFactory4* factory)
{
	MIRU_CPU_PROFILE_FUNCTION();

	UINT i = 0;
	IDXGIAdapter1* adapter;
	DXGI_ADAPTER_DESC adapterDesc = {};
	while (factory->EnumAdapters1(i, &adapter) != DXGI_ERROR_NOT_FOUND)
	{
		adapter->GetDesc(&adapterDesc);
		m_PDIs.push_back({ reinterpret_cast<IDXGIAdapter4*>(adapter), adapterDesc });
		i++;
	}
}

void Context::DeviceWaitIdle()
{
	MIRU_CPU_PROFILE_FUNCTION();

	base::FenceRef fence;
	Fence::CreateInfo ci;
	ci.debugName = "";
	ci.device = m_Device;
	ci.signaled = false;
	ci.timeout = UINT64_MAX; //In nanoseconds
	
	for (auto& queue : m_Queues)
	{
		fence = Fence::Create(&ci);

		ref_cast<Fence>(fence)->GetValue()++;
		queue->Signal(ref_cast<Fence>(fence)->m_Fence, ref_cast<Fence>(fence)->GetValue());
		fence->Wait();
		
		fence->~Fence();
		fence = nullptr;
	}
}

void Context::MessageCallbackFunction(D3D12_MESSAGE_CATEGORY Category, D3D12_MESSAGE_SEVERITY Severity, D3D12_MESSAGE_ID ID, LPCSTR pDescription, void* pContext)
{
	std::string category = D3D12_MESSAGE_CATEGORY_ToString(Category);
	std::string severity = D3D12_MESSAGE_SEVERITY_ToString(Severity);
	std::string id = D3D12_MESSAGE_ID_ToString(ID);
	std::string description = pDescription;

	std::stringstream errorMessage;
	errorMessage << "D3D12 " << severity << ": " << description << " [ " << severity << " " << category << " #" << uint32_t(ID) << ": " << id << " ]";
	std::string errorMessageStr = errorMessage.str();

	MIRU_ASSERT(uint32_t(ID), errorMessageStr.c_str());
}

std::string Context::D3D12_MESSAGE_CATEGORY_ToString(D3D12_MESSAGE_CATEGORY Category)
{
	std::vector<std::string> D3D12_MESSAGE_CATEGORY_ToStringMapping =
	{
		"APPLICATION_DEFINED",
		"MISCELLANEOUS",
		"INITIALIZATION",
		"CLEANUP",
		"COMPILATION",
		"STATE_CREATION",
		"STATE_SETTING",
		"STATE_GETTING",
		"RESOURCE_MANIPULATION",
		"EXECUTION",
		"SHADER"
	};

	return D3D12_MESSAGE_CATEGORY_ToStringMapping[size_t(Category)];
}
std::string Context::D3D12_MESSAGE_SEVERITY_ToString(D3D12_MESSAGE_SEVERITY Severity)
{
	std::vector<std::string> D3D12_MESSAGE_SEVERITY_ToStringMapping =
	{
		"CORRUPTION",
		"ERROR",
		"WARNING",
		"INFO",
		"MESSAGE"
	};

	return D3D12_MESSAGE_SEVERITY_ToStringMapping[size_t(Severity)];
}
std::string Context::D3D12_MESSAGE_ID_ToString(D3D12_MESSAGE_ID ID)
{
	std::map<size_t, std::string> D3D12_MESSAGE_ID_ToStringMapping =
	{
		{ 0, "UNKNOWN" },
		{ 1, "STRING_FROM_APPLICATION" },
		{ 2, "CORRUPTED_THIS" },
		{ 3, "CORRUPTED_PARAMETER1" },
		{ 4, "CORRUPTED_PARAMETER2" },
		{ 5, "CORRUPTED_PARAMETER3" },
		{ 6, "CORRUPTED_PARAMETER4" },
		{ 7, "CORRUPTED_PARAMETER5" },
		{ 8, "CORRUPTED_PARAMETER6" },
		{ 9, "CORRUPTED_PARAMETER7" },
		{ 10, "CORRUPTED_PARAMETER8" },
		{ 11, "CORRUPTED_PARAMETER9" },
		{ 12, "CORRUPTED_PARAMETER10" },
		{ 13, "CORRUPTED_PARAMETER11" },
		{ 14, "CORRUPTED_PARAMETER12" },
		{ 15, "CORRUPTED_PARAMETER13" },
		{ 16, "CORRUPTED_PARAMETER14" },
		{ 17, "CORRUPTED_PARAMETER15" },
		{ 18, "CORRUPTED_MULTITHREADING" },
		{ 19, "MESSAGE_REPORTING_OUTOFMEMORY" },
		{ 20, "GETPRIVATEDATA_MOREDATA" },
		{ 21, "SETPRIVATEDATA_INVALIDFREEDATA" },
		{ 24, "SETPRIVATEDATA_CHANGINGPARAMS" },
		{ 25, "SETPRIVATEDATA_OUTOFMEMORY" },
		{ 26, "CREATESHADERRESOURCEVIEW_UNRECOGNIZEDFORMAT" },
		{ 27, "CREATESHADERRESOURCEVIEW_INVALIDDESC" },
		{ 28, "CREATESHADERRESOURCEVIEW_INVALIDFORMAT" },
		{ 29, "CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANESLICE" },
		{ 30, "CREATESHADERRESOURCEVIEW_INVALIDPLANESLICE" },
		{ 31, "CREATESHADERRESOURCEVIEW_INVALIDDIMENSIONS" },
		{ 32, "CREATESHADERRESOURCEVIEW_INVALIDRESOURCE" },
		{ 35, "CREATERENDERTARGETVIEW_UNRECOGNIZEDFORMAT" },
		{ 36, "CREATERENDERTARGETVIEW_UNSUPPORTEDFORMAT" },
		{ 37, "CREATERENDERTARGETVIEW_INVALIDDESC" },
		{ 38, "CREATERENDERTARGETVIEW_INVALIDFORMAT" },
		{ 39, "CREATERENDERTARGETVIEW_INVALIDVIDEOPLANESLICE" },
		{ 40, "CREATERENDERTARGETVIEW_INVALIDPLANESLICE" },
		{ 41, "CREATERENDERTARGETVIEW_INVALIDDIMENSIONS" },
		{ 42, "CREATERENDERTARGETVIEW_INVALIDRESOURCE" },
		{ 45, "CREATEDEPTHSTENCILVIEW_UNRECOGNIZEDFORMAT" },
		{ 46, "CREATEDEPTHSTENCILVIEW_INVALIDDESC" },
		{ 47, "CREATEDEPTHSTENCILVIEW_INVALIDFORMAT" },
		{ 48, "CREATEDEPTHSTENCILVIEW_INVALIDDIMENSIONS" },
		{ 49, "CREATEDEPTHSTENCILVIEW_INVALIDRESOURCE" },
		{ 52, "CREATEINPUTLAYOUT_OUTOFMEMORY" },
		{ 53, "CREATEINPUTLAYOUT_TOOMANYELEMENTS" },
		{ 54, "CREATEINPUTLAYOUT_INVALIDFORMAT" },
		{ 55, "CREATEINPUTLAYOUT_INCOMPATIBLEFORMAT" },
		{ 56, "CREATEINPUTLAYOUT_INVALIDSLOT" },
		{ 57, "CREATEINPUTLAYOUT_INVALIDINPUTSLOTCLASS" },
		{ 58, "CREATEINPUTLAYOUT_STEPRATESLOTCLASSMISMATCH" },
		{ 59, "CREATEINPUTLAYOUT_INVALIDSLOTCLASSCHANGE" },
		{ 60, "CREATEINPUTLAYOUT_INVALIDSTEPRATECHANGE" },
		{ 61, "CREATEINPUTLAYOUT_INVALIDALIGNMENT" },
		{ 62, "CREATEINPUTLAYOUT_DUPLICATESEMANTIC" },
		{ 63, "CREATEINPUTLAYOUT_UNPARSEABLEINPUTSIGNATURE" },
		{ 64, "CREATEINPUTLAYOUT_NULLSEMANTIC" },
		{ 65, "CREATEINPUTLAYOUT_MISSINGELEMENT" },
		{ 66, "CREATEVERTEXSHADER_OUTOFMEMORY" },
		{ 67, "CREATEVERTEXSHADER_INVALIDSHADERBYTECODE" },
		{ 68, "CREATEVERTEXSHADER_INVALIDSHADERTYPE" },
		{ 69, "CREATEGEOMETRYSHADER_OUTOFMEMORY" },
		{ 70, "CREATEGEOMETRYSHADER_INVALIDSHADERBYTECODE" },
		{ 71, "CREATEGEOMETRYSHADER_INVALIDSHADERTYPE" },
		{ 72, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTOFMEMORY" },
		{ 73, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERBYTECODE" },
		{ 74, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE" },
		{ 75, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMENTRIES" },
		{ 76, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSTREAMSTRIDEUNUSED" },
		{ 79, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSLOT0EXPECTED" },
		{ 80, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSLOT" },
		{ 81, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_ONLYONEELEMENTPERSLOT" },
		{ 82, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCOMPONENTCOUNT" },
		{ 83, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTARTCOMPONENTANDCOMPONENTCOUNT" },
		{ 84, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDGAPDEFINITION" },
		{ 85, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_REPEATEDOUTPUT" },
		{ 86, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSTREAMSTRIDE" },
		{ 87, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGSEMANTIC" },
		{ 88, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MASKMISMATCH" },
		{ 89, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_CANTHAVEONLYGAPS" },
		{ 90, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DECLTOOCOMPLEX" },
		{ 91, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGOUTPUTSIGNATURE" },
		{ 92, "CREATEPIXELSHADER_OUTOFMEMORY" },
		{ 93, "CREATEPIXELSHADER_INVALIDSHADERBYTECODE" },
		{ 94, "CREATEPIXELSHADER_INVALIDSHADERTYPE" },
		{ 95, "CREATERASTERIZERSTATE_INVALIDFILLMODE" },
		{ 96, "CREATERASTERIZERSTATE_INVALIDCULLMODE" },
		{ 97, "CREATERASTERIZERSTATE_INVALIDDEPTHBIASCLAMP" },
		{ 98, "CREATERASTERIZERSTATE_INVALIDSLOPESCALEDDEPTHBIAS" },
		{ 100, "CREATEDEPTHSTENCILSTATE_INVALIDDEPTHWRITEMASK" },
		{ 101, "CREATEDEPTHSTENCILSTATE_INVALIDDEPTHFUNC" },
		{ 102, "CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFAILOP" },
		{ 103, "CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILZFAILOP" },
		{ 104, "CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILPASSOP" },
		{ 105, "CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFUNC" },
		{ 106, "CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFAILOP" },
		{ 107, "CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILZFAILOP" },
		{ 108, "CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILPASSOP" },
		{ 109, "CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFUNC" },
		{ 111, "CREATEBLENDSTATE_INVALIDSRCBLEND" },
		{ 112, "CREATEBLENDSTATE_INVALIDDESTBLEND" },
		{ 113, "CREATEBLENDSTATE_INVALIDBLENDOP" },
		{ 114, "CREATEBLENDSTATE_INVALIDSRCBLENDALPHA" },
		{ 115, "CREATEBLENDSTATE_INVALIDDESTBLENDALPHA" },
		{ 116, "CREATEBLENDSTATE_INVALIDBLENDOPALPHA" },
		{ 117, "CREATEBLENDSTATE_INVALIDRENDERTARGETWRITEMASK" },
		{ 135, "CLEARDEPTHSTENCILVIEW_INVALID" },
		{ 200, "COMMAND_LIST_DRAW_ROOT_SIGNATURE_NOT_SET" },
		{ 201, "COMMAND_LIST_DRAW_ROOT_SIGNATURE_MISMATCH" },
		{ 202, "COMMAND_LIST_DRAW_VERTEX_BUFFER_NOT_SET" },
		{ 209, "COMMAND_LIST_DRAW_VERTEX_BUFFER_STRIDE_TOO_SMALL" },
		{ 210, "COMMAND_LIST_DRAW_VERTEX_BUFFER_TOO_SMALL" },
		{ 211, "COMMAND_LIST_DRAW_INDEX_BUFFER_NOT_SET" },
		{ 212, "COMMAND_LIST_DRAW_INDEX_BUFFER_FORMAT_INVALID" },
		{ 213, "COMMAND_LIST_DRAW_INDEX_BUFFER_TOO_SMALL" },
		{ 219, "COMMAND_LIST_DRAW_INVALID_PRIMITIVETOPOLOGY" },
		{ 221, "COMMAND_LIST_DRAW_VERTEX_STRIDE_UNALIGNED" },
		{ 222, "COMMAND_LIST_DRAW_INDEX_OFFSET_UNALIGNED" },
		{ 232, "DEVICE_REMOVAL_PROCESS_AT_FAULT" },
		{ 233, "DEVICE_REMOVAL_PROCESS_POSSIBLY_AT_FAULT" },
		{ 234, "DEVICE_REMOVAL_PROCESS_NOT_AT_FAULT" },
		{ 239, "CREATEINPUTLAYOUT_TRAILING_DIGIT_IN_SEMANTIC" },
		{ 240, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_TRAILING_DIGIT_IN_SEMANTIC" },
		{ 245, "CREATEINPUTLAYOUT_TYPE_MISMATCH" },
		{ 253, "CREATEINPUTLAYOUT_EMPTY_LAYOUT" },
		{ 255, "LIVE_OBJECT_SUMMARY" },
		{ 274, "LIVE_DEVICE" },
		{ 275, "LIVE_SWAPCHAIN" },
		{ 276, "CREATEDEPTHSTENCILVIEW_INVALIDFLAGS" },
		{ 277, "CREATEVERTEXSHADER_INVALIDCLASSLINKAGE" },
		{ 278, "CREATEGEOMETRYSHADER_INVALIDCLASSLINKAGE" },
		{ 280, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAMTORASTERIZER" },
		{ 283, "CREATEPIXELSHADER_INVALIDCLASSLINKAGE" },
		{ 284, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAM" },
		{ 285, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDENTRIES" },
		{ 286, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTRIDES" },
		{ 287, "CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTRIDES" },
		{ 289, "CREATEHULLSHADER_OUTOFMEMORY" },
		{ 290, "CREATEHULLSHADER_INVALIDSHADERBYTECODE" },
		{ 291, "CREATEHULLSHADER_INVALIDSHADERTYPE" },
		{ 292, "CREATEHULLSHADER_INVALIDCLASSLINKAGE" },
		{ 294, "CREATEDOMAINSHADER_OUTOFMEMORY" },
		{ 295, "CREATEDOMAINSHADER_INVALIDSHADERBYTECODE" },
		{ 296, "CREATEDOMAINSHADER_INVALIDSHADERTYPE" },
		{ 297, "CREATEDOMAINSHADER_INVALIDCLASSLINKAGE" },
		{ 310, "RESOURCE_UNMAP_NOTMAPPED" },
		{ 318, "DEVICE_CHECKFEATURESUPPORT_MISMATCHED_DATA_SIZE" },
		{ 321, "CREATECOMPUTESHADER_OUTOFMEMORY" },
		{ 322, "CREATECOMPUTESHADER_INVALIDSHADERBYTECODE" },
		{ 323, "CREATECOMPUTESHADER_INVALIDCLASSLINKAGE" },
		{ 331, "DEVICE_CREATEVERTEXSHADER_DOUBLEFLOATOPSNOTSUPPORTED" },
		{ 332, "DEVICE_CREATEHULLSHADER_DOUBLEFLOATOPSNOTSUPPORTED" },
		{ 333, "DEVICE_CREATEDOMAINSHADER_DOUBLEFLOATOPSNOTSUPPORTED" },
		{ 334, "DEVICE_CREATEGEOMETRYSHADER_DOUBLEFLOATOPSNOTSUPPORTED" },
		{ 335, "DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEFLOATOPSNOTSUPPORTED" },
		{ 336, "DEVICE_CREATEPIXELSHADER_DOUBLEFLOATOPSNOTSUPPORTED" },
		{ 337, "DEVICE_CREATECOMPUTESHADER_DOUBLEFLOATOPSNOTSUPPORTED" },
		{ 340, "CREATEUNORDEREDACCESSVIEW_INVALIDRESOURCE" },
		{ 341, "CREATEUNORDEREDACCESSVIEW_INVALIDDESC" },
		{ 342, "CREATEUNORDEREDACCESSVIEW_INVALIDFORMAT" },
		{ 343, "CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANESLICE" },
		{ 344, "CREATEUNORDEREDACCESSVIEW_INVALIDPLANESLICE" },
		{ 345, "CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS" },
		{ 346, "CREATEUNORDEREDACCESSVIEW_UNRECOGNIZEDFORMAT" },
		{ 354, "CREATEUNORDEREDACCESSVIEW_INVALIDFLAGS" },
		{ 401, "CREATERASTERIZERSTATE_INVALIDFORCEDSAMPLECOUNT" },
		{ 403, "CREATEBLENDSTATE_INVALIDLOGICOPS" },
		{ 410, "DEVICE_CREATEVERTEXSHADER_DOUBLEEXTENSIONSNOTSUPPORTED" },
		{ 412, "DEVICE_CREATEHULLSHADER_DOUBLEEXTENSIONSNOTSUPPORTED" },
		{ 414, "DEVICE_CREATEDOMAINSHADER_DOUBLEEXTENSIONSNOTSUPPORTED" },
		{ 416, "DEVICE_CREATEGEOMETRYSHADER_DOUBLEEXTENSIONSNOTSUPPORTED" },
		{ 418, "DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEEXTENSIONSNOTSUPPORTED" },
		{ 420, "DEVICE_CREATEPIXELSHADER_DOUBLEEXTENSIONSNOTSUPPORTED" },
		{ 422, "DEVICE_CREATECOMPUTESHADER_DOUBLEEXTENSIONSNOTSUPPORTED" },
		{ 425, "DEVICE_CREATEVERTEXSHADER_UAVSNOTSUPPORTED" },
		{ 426, "DEVICE_CREATEHULLSHADER_UAVSNOTSUPPORTED" },
		{ 427, "DEVICE_CREATEDOMAINSHADER_UAVSNOTSUPPORTED" },
		{ 428, "DEVICE_CREATEGEOMETRYSHADER_UAVSNOTSUPPORTED" },
		{ 429, "DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UAVSNOTSUPPORTED" },
		{ 430, "DEVICE_CREATEPIXELSHADER_UAVSNOTSUPPORTED" },
		{ 431, "DEVICE_CREATECOMPUTESHADER_UAVSNOTSUPPORTED" },
		{ 447, "DEVICE_CLEARVIEW_INVALIDSOURCERECT" },
		{ 448, "DEVICE_CLEARVIEW_EMPTYRECT" },
		{ 493, "UPDATETILEMAPPINGS_INVALID_PARAMETER" },
		{ 494, "COPYTILEMAPPINGS_INVALID_PARAMETER" },
		{ 506, "CREATEDEVICE_INVALIDARGS" },
		{ 507, "CREATEDEVICE_WARNING" },
		{ 519, "RESOURCE_BARRIER_INVALID_TYPE" },
		{ 520, "RESOURCE_BARRIER_NULL_POINTER" },
		{ 521, "RESOURCE_BARRIER_INVALID_SUBRESOURCE" },
		{ 522, "RESOURCE_BARRIER_RESERVED_BITS" },
		{ 523, "RESOURCE_BARRIER_MISSING_BIND_FLAGS" },
		{ 524, "RESOURCE_BARRIER_MISMATCHING_MISC_FLAGS" },
		{ 525, "RESOURCE_BARRIER_MATCHING_STATES" },
		{ 526, "RESOURCE_BARRIER_INVALID_COMBINATION" },
		{ 527, "RESOURCE_BARRIER_BEFORE_AFTER_MISMATCH" },
		{ 528, "RESOURCE_BARRIER_INVALID_RESOURCE" },
		{ 529, "RESOURCE_BARRIER_SAMPLE_COUNT" },
		{ 530, "RESOURCE_BARRIER_INVALID_FLAGS" },
		{ 531, "RESOURCE_BARRIER_INVALID_COMBINED_FLAGS" },
		{ 532, "RESOURCE_BARRIER_INVALID_FLAGS_FOR_FORMAT" },
		{ 533, "RESOURCE_BARRIER_INVALID_SPLIT_BARRIER" },
		{ 534, "RESOURCE_BARRIER_UNMATCHED_END" },
		{ 535, "RESOURCE_BARRIER_UNMATCHED_BEGIN" },
		{ 536, "RESOURCE_BARRIER_INVALID_FLAG" },
		{ 537, "RESOURCE_BARRIER_INVALID_COMMAND_LIST_TYPE" },
		{ 538, "INVALID_SUBRESOURCE_STATE" },
		{ 540, "COMMAND_ALLOCATOR_CONTENTION" },
		{ 541, "COMMAND_ALLOCATOR_RESET" },
		{ 542, "COMMAND_ALLOCATOR_RESET_BUNDLE" },
		{ 543, "COMMAND_ALLOCATOR_CANNOT_RESET" },
		{ 544, "COMMAND_LIST_OPEN" },
		{ 546, "INVALID_BUNDLE_API" },
		{ 547, "COMMAND_LIST_CLOSED" },
		{ 549, "WRONG_COMMAND_ALLOCATOR_TYPE" },
		{ 552, "COMMAND_ALLOCATOR_SYNC" },
		{ 553, "COMMAND_LIST_SYNC" },
		{ 554, "SET_DESCRIPTOR_HEAP_INVALID" },
		{ 557, "CREATE_COMMANDQUEUE" },
		{ 558, "CREATE_COMMANDALLOCATOR" },
		{ 559, "CREATE_PIPELINESTATE" },
		{ 560, "CREATE_COMMANDLIST12" },
		{ 562, "CREATE_RESOURCE" },
		{ 563, "CREATE_DESCRIPTORHEAP" },
		{ 564, "CREATE_ROOTSIGNATURE" },
		{ 565, "CREATE_LIBRARY" },
		{ 566, "CREATE_HEAP" },
		{ 567, "CREATE_MONITOREDFENCE" },
		{ 568, "CREATE_QUERYHEAP" },
		{ 569, "CREATE_COMMANDSIGNATURE" },
		{ 570, "LIVE_COMMANDQUEUE" },
		{ 571, "LIVE_COMMANDALLOCATOR" },
		{ 572, "LIVE_PIPELINESTATE" },
		{ 573, "LIVE_COMMANDLIST12" },
		{ 575, "LIVE_RESOURCE" },
		{ 576, "LIVE_DESCRIPTORHEAP" },
		{ 577, "LIVE_ROOTSIGNATURE" },
		{ 578, "LIVE_LIBRARY" },
		{ 579, "LIVE_HEAP" },
		{ 580, "LIVE_MONITOREDFENCE" },
		{ 581, "LIVE_QUERYHEAP" },
		{ 582, "LIVE_COMMANDSIGNATURE" },
		{ 583, "DESTROY_COMMANDQUEUE" },
		{ 584, "DESTROY_COMMANDALLOCATOR" },
		{ 585, "DESTROY_PIPELINESTATE" },
		{ 586, "DESTROY_COMMANDLIST12" },
		{ 588, "DESTROY_RESOURCE" },
		{ 589, "DESTROY_DESCRIPTORHEAP" },
		{ 590, "DESTROY_ROOTSIGNATURE" },
		{ 591, "DESTROY_LIBRARY" },
		{ 592, "DESTROY_HEAP" },
		{ 593, "DESTROY_MONITOREDFENCE" },
		{ 594, "DESTROY_QUERYHEAP" },
		{ 595, "DESTROY_COMMANDSIGNATURE" },
		{ 597, "CREATERESOURCE_INVALIDDIMENSIONS" },
		{ 599, "CREATERESOURCE_INVALIDMISCFLAGS" },
		{ 602, "CREATERESOURCE_INVALIDARG_RETURN" },
		{ 603, "CREATERESOURCE_OUTOFMEMORY_RETURN" },
		{ 604, "CREATERESOURCE_INVALIDDESC" },
		{ 607, "POSSIBLY_INVALID_SUBRESOURCE_STATE" },
		{ 608, "INVALID_USE_OF_NON_RESIDENT_RESOURCE" },
		{ 609, "POSSIBLE_INVALID_USE_OF_NON_RESIDENT_RESOURCE" },
		{ 610, "BUNDLE_PIPELINE_STATE_MISMATCH" },
		{ 611, "PRIMITIVE_TOPOLOGY_MISMATCH_PIPELINE_STATE" },
		{ 613, "RENDER_TARGET_FORMAT_MISMATCH_PIPELINE_STATE" },
		{ 614, "RENDER_TARGET_SAMPLE_DESC_MISMATCH_PIPELINE_STATE" },
		{ 615, "DEPTH_STENCIL_FORMAT_MISMATCH_PIPELINE_STATE" },
		{ 616, "DEPTH_STENCIL_SAMPLE_DESC_MISMATCH_PIPELINE_STATE" },
		{ 622, "CREATESHADER_INVALIDBYTECODE" },
		{ 623, "CREATEHEAP_NULLDESC" },
		{ 624, "CREATEHEAP_INVALIDSIZE" },
		{ 625, "CREATEHEAP_UNRECOGNIZEDHEAPTYPE" },
		{ 626, "CREATEHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES" },
		{ 627, "CREATEHEAP_UNRECOGNIZEDMEMORYPOOL" },
		{ 628, "CREATEHEAP_INVALIDPROPERTIES" },
		{ 629, "CREATEHEAP_INVALIDALIGNMENT" },
		{ 630, "CREATEHEAP_UNRECOGNIZEDMISCFLAGS" },
		{ 631, "CREATEHEAP_INVALIDMISCFLAGS" },
		{ 632, "CREATEHEAP_INVALIDARG_RETURN" },
		{ 633, "CREATEHEAP_OUTOFMEMORY_RETURN" },
		{ 634, "CREATERESOURCEANDHEAP_NULLHEAPPROPERTIES" },
		{ 635, "CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPTYPE" },
		{ 636, "CREATERESOURCEANDHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES" },
		{ 637, "CREATERESOURCEANDHEAP_UNRECOGNIZEDMEMORYPOOL" },
		{ 638, "CREATERESOURCEANDHEAP_INVALIDHEAPPROPERTIES" },
		{ 639, "CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPMISCFLAGS" },
		{ 640, "CREATERESOURCEANDHEAP_INVALIDHEAPMISCFLAGS" },
		{ 641, "CREATERESOURCEANDHEAP_INVALIDARG_RETURN" },
		{ 642, "CREATERESOURCEANDHEAP_OUTOFMEMORY_RETURN" },
		{ 643, "GETCUSTOMHEAPPROPERTIES_UNRECOGNIZEDHEAPTYPE" },
		{ 644, "GETCUSTOMHEAPPROPERTIES_INVALIDHEAPTYPE" },
		{ 645, "CREATE_DESCRIPTOR_HEAP_INVALID_DESC" },
		{ 646, "INVALID_DESCRIPTOR_HANDLE" },
		{ 647, "CREATERASTERIZERSTATE_INVALID_CONSERVATIVERASTERMODE" },
		{ 649, "CREATE_CONSTANT_BUFFER_VIEW_INVALID_RESOURCE" },
		{ 650, "CREATE_CONSTANT_BUFFER_VIEW_INVALID_DESC" },
		{ 652, "CREATE_UNORDEREDACCESS_VIEW_INVALID_COUNTER_USAGE" },
		{ 653, "COPY_DESCRIPTORS_INVALID_RANGES" },
		{ 654, "COPY_DESCRIPTORS_WRITE_ONLY_DESCRIPTOR" },
		{ 655, "CREATEGRAPHICSPIPELINESTATE_RTV_FORMAT_NOT_UNKNOWN" },
		{ 656, "CREATEGRAPHICSPIPELINESTATE_INVALID_RENDER_TARGET_COUNT" },
		{ 657, "CREATEGRAPHICSPIPELINESTATE_VERTEX_SHADER_NOT_SET" },
		{ 658, "CREATEGRAPHICSPIPELINESTATE_INPUTLAYOUT_NOT_SET" },
		{ 659, "CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_HS_DS_SIGNATURE_MISMATCH" },
		{ 660, "CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERINDEX" },
		{ 661, "CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_COMPONENTTYPE" },
		{ 662, "CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERMASK" },
		{ 663, "CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SYSTEMVALUE" },
		{ 664, "CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS" },
		{ 665, "CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_MINPRECISION" },
		{ 666, "CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND" },
		{ 667, "CREATEGRAPHICSPIPELINESTATE_HS_XOR_DS_MISMATCH" },
		{ 668, "CREATEGRAPHICSPIPELINESTATE_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH" },
		{ 669, "CREATEGRAPHICSPIPELINESTATE_HS_DS_CONTROL_POINT_COUNT_MISMATCH" },
		{ 670, "CREATEGRAPHICSPIPELINESTATE_HS_DS_TESSELLATOR_DOMAIN_MISMATCH" },
		{ 671, "CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN" },
		{ 672, "CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_FORCED_SAMPLE_COUNT" },
		{ 673, "CREATEGRAPHICSPIPELINESTATE_INVALID_PRIMITIVETOPOLOGY" },
		{ 674, "CREATEGRAPHICSPIPELINESTATE_INVALID_SYSTEMVALUE" },
		{ 675, "CREATEGRAPHICSPIPELINESTATE_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0" },
		{ 676, "CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING" },
		{ 677, "CREATEGRAPHICSPIPELINESTATE_PS_OUTPUT_TYPE_MISMATCH" },
		{ 678, "CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS" },
		{ 679, "CREATEGRAPHICSPIPELINESTATE_RENDERTARGETVIEW_NOT_SET" },
		{ 680, "CREATEGRAPHICSPIPELINESTATE_DEPTHSTENCILVIEW_NOT_SET" },
		{ 681, "CREATEGRAPHICSPIPELINESTATE_GS_INPUT_PRIMITIVE_MISMATCH" },
		{ 682, "CREATEGRAPHICSPIPELINESTATE_POSITION_NOT_PRESENT" },
		{ 683, "CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE_FLAGS" },
		{ 684, "CREATEGRAPHICSPIPELINESTATE_INVALID_INDEX_BUFFER_PROPERTIES" },
		{ 685, "CREATEGRAPHICSPIPELINESTATE_INVALID_SAMPLE_DESC" },
		{ 686, "CREATEGRAPHICSPIPELINESTATE_HS_ROOT_SIGNATURE_MISMATCH" },
		{ 687, "CREATEGRAPHICSPIPELINESTATE_DS_ROOT_SIGNATURE_MISMATCH" },
		{ 688, "CREATEGRAPHICSPIPELINESTATE_VS_ROOT_SIGNATURE_MISMATCH" },
		{ 689, "CREATEGRAPHICSPIPELINESTATE_GS_ROOT_SIGNATURE_MISMATCH" },
		{ 690, "CREATEGRAPHICSPIPELINESTATE_PS_ROOT_SIGNATURE_MISMATCH" },
		{ 691, "CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE" },
		{ 692, "EXECUTE_BUNDLE_OPEN_BUNDLE" },
		{ 693, "EXECUTE_BUNDLE_DESCRIPTOR_HEAP_MISMATCH" },
		{ 694, "EXECUTE_BUNDLE_TYPE" },
		{ 695, "DRAW_EMPTY_SCISSOR_RECTANGLE" },
		{ 696, "CREATE_ROOT_SIGNATURE_BLOB_NOT_FOUND" },
		{ 697, "CREATE_ROOT_SIGNATURE_DESERIALIZE_FAILED" },
		{ 698, "CREATE_ROOT_SIGNATURE_INVALID_CONFIGURATION" },
		{ 699, "CREATE_ROOT_SIGNATURE_NOT_SUPPORTED_ON_DEVICE" },
		{ 700, "CREATERESOURCEANDHEAP_NULLRESOURCEPROPERTIES" },
		{ 701, "CREATERESOURCEANDHEAP_NULLHEAP" },
		{ 702, "GETRESOURCEALLOCATIONINFO_INVALIDRDESCS" },
		{ 703, "MAKERESIDENT_NULLOBJECTARRAY" },
		{ 705, "EVICT_NULLOBJECTARRAY" },
		{ 708, "SET_DESCRIPTOR_TABLE_INVALID" },
		{ 709, "SET_ROOT_CONSTANT_INVALID" },
		{ 710, "SET_ROOT_CONSTANT_BUFFER_VIEW_INVALID" },
		{ 711, "SET_ROOT_SHADER_RESOURCE_VIEW_INVALID" },
		{ 712, "SET_ROOT_UNORDERED_ACCESS_VIEW_INVALID" },
		{ 713, "SET_VERTEX_BUFFERS_INVALID_DESC" },
		{ 715, "SET_INDEX_BUFFER_INVALID_DESC" },
		{ 717, "SET_STREAM_OUTPUT_BUFFERS_INVALID_DESC" },
		{ 718, "CREATERESOURCE_UNRECOGNIZEDDIMENSIONALITY" },
		{ 719, "CREATERESOURCE_UNRECOGNIZEDLAYOUT" },
		{ 720, "CREATERESOURCE_INVALIDDIMENSIONALITY" },
		{ 721, "CREATERESOURCE_INVALIDALIGNMENT" },
		{ 722, "CREATERESOURCE_INVALIDMIPLEVELS" },
		{ 723, "CREATERESOURCE_INVALIDSAMPLEDESC" },
		{ 724, "CREATERESOURCE_INVALIDLAYOUT" },
		{ 725, "SET_INDEX_BUFFER_INVALID" },
		{ 726, "SET_VERTEX_BUFFERS_INVALID" },
		{ 727, "SET_STREAM_OUTPUT_BUFFERS_INVALID" },
		{ 728, "SET_RENDER_TARGETS_INVALID" },
		{ 729, "CREATEQUERY_HEAP_INVALID_PARAMETERS" },
		{ 731, "BEGIN_END_QUERY_INVALID_PARAMETERS" },
		{ 732, "CLOSE_COMMAND_LIST_OPEN_QUERY" },
		{ 733, "RESOLVE_QUERY_DATA_INVALID_PARAMETERS" },
		{ 734, "SET_PREDICATION_INVALID_PARAMETERS" },
		{ 735, "TIMESTAMPS_NOT_SUPPORTED" },
		{ 737, "CREATERESOURCE_UNRECOGNIZEDFORMAT" },
		{ 738, "CREATERESOURCE_INVALIDFORMAT" },
		{ 739, "GETCOPYABLEFOOTPRINTS_INVALIDSUBRESOURCERANGE" },
		{ 740, "GETCOPYABLEFOOTPRINTS_INVALIDBASEOFFSET" },
		{ 739, "GETCOPYABLELAYOUT_INVALIDSUBRESOURCERANGE" },
		{ 740, "GETCOPYABLELAYOUT_INVALIDBASEOFFSET" },
		{ 741, "RESOURCE_BARRIER_INVALID_HEAP" },
		{ 742, "CREATE_SAMPLER_INVALID" },
		{ 743, "CREATECOMMANDSIGNATURE_INVALID" },
		{ 744, "EXECUTE_INDIRECT_INVALID_PARAMETERS" },
		{ 745, "GETGPUVIRTUALADDRESS_INVALID_RESOURCE_DIMENSION" },
		{ 815, "CREATERESOURCE_INVALIDCLEARVALUE" },
		{ 816, "CREATERESOURCE_UNRECOGNIZEDCLEARVALUEFORMAT" },
		{ 817, "CREATERESOURCE_INVALIDCLEARVALUEFORMAT" },
		{ 818, "CREATERESOURCE_CLEARVALUEDENORMFLUSH" },
		{ 820, "CLEARRENDERTARGETVIEW_MISMATCHINGCLEARVALUE" },
		{ 821, "CLEARDEPTHSTENCILVIEW_MISMATCHINGCLEARVALUE" },
		{ 822, "MAP_INVALIDHEAP" },
		{ 823, "UNMAP_INVALIDHEAP" },
		{ 824, "MAP_INVALIDRESOURCE" },
		{ 825, "UNMAP_INVALIDRESOURCE" },
		{ 826, "MAP_INVALIDSUBRESOURCE" },
		{ 827, "UNMAP_INVALIDSUBRESOURCE" },
		{ 828, "MAP_INVALIDRANGE" },
		{ 829, "UNMAP_INVALIDRANGE" },
		{ 832, "MAP_INVALIDDATAPOINTER" },
		{ 833, "MAP_INVALIDARG_RETURN" },
		{ 834, "MAP_OUTOFMEMORY_RETURN" },
		{ 835, "EXECUTECOMMANDLISTS_BUNDLENOTSUPPORTED" },
		{ 836, "EXECUTECOMMANDLISTS_COMMANDLISTMISMATCH" },
		{ 837, "EXECUTECOMMANDLISTS_OPENCOMMANDLIST" },
		{ 838, "EXECUTECOMMANDLISTS_FAILEDCOMMANDLIST" },
		{ 839, "COPYBUFFERREGION_NULLDST" },
		{ 840, "COPYBUFFERREGION_INVALIDDSTRESOURCEDIMENSION" },
		{ 841, "COPYBUFFERREGION_DSTRANGEOUTOFBOUNDS" },
		{ 842, "COPYBUFFERREGION_NULLSRC" },
		{ 843, "COPYBUFFERREGION_INVALIDSRCRESOURCEDIMENSION" },
		{ 844, "COPYBUFFERREGION_SRCRANGEOUTOFBOUNDS" },
		{ 845, "COPYBUFFERREGION_INVALIDCOPYFLAGS" },
		{ 846, "COPYTEXTUREREGION_NULLDST" },
		{ 847, "COPYTEXTUREREGION_UNRECOGNIZEDDSTTYPE" },
		{ 848, "COPYTEXTUREREGION_INVALIDDSTRESOURCEDIMENSION" },
		{ 849, "COPYTEXTUREREGION_INVALIDDSTRESOURCE" },
		{ 850, "COPYTEXTUREREGION_INVALIDDSTSUBRESOURCE" },
		{ 851, "COPYTEXTUREREGION_INVALIDDSTOFFSET" },
		{ 852, "COPYTEXTUREREGION_UNRECOGNIZEDDSTFORMAT" },
		{ 853, "COPYTEXTUREREGION_INVALIDDSTFORMAT" },
		{ 854, "COPYTEXTUREREGION_INVALIDDSTDIMENSIONS" },
		{ 855, "COPYTEXTUREREGION_INVALIDDSTROWPITCH" },
		{ 856, "COPYTEXTUREREGION_INVALIDDSTPLACEMENT" },
		{ 857, "COPYTEXTUREREGION_INVALIDDSTDSPLACEDFOOTPRINTFORMAT" },
		{ 858, "COPYTEXTUREREGION_DSTREGIONOUTOFBOUNDS" },
		{ 859, "COPYTEXTUREREGION_NULLSRC" },
		{ 860, "COPYTEXTUREREGION_UNRECOGNIZEDSRCTYPE" },
		{ 861, "COPYTEXTUREREGION_INVALIDSRCRESOURCEDIMENSION" },
		{ 862, "COPYTEXTUREREGION_INVALIDSRCRESOURCE" },
		{ 863, "COPYTEXTUREREGION_INVALIDSRCSUBRESOURCE" },
		{ 864, "COPYTEXTUREREGION_INVALIDSRCOFFSET" },
		{ 865, "COPYTEXTUREREGION_UNRECOGNIZEDSRCFORMAT" },
		{ 866, "COPYTEXTUREREGION_INVALIDSRCFORMAT" },
		{ 867, "COPYTEXTUREREGION_INVALIDSRCDIMENSIONS" },
		{ 868, "COPYTEXTUREREGION_INVALIDSRCROWPITCH" },
		{ 869, "COPYTEXTUREREGION_INVALIDSRCPLACEMENT" },
		{ 870, "COPYTEXTUREREGION_INVALIDSRCDSPLACEDFOOTPRINTFORMAT" },
		{ 871, "COPYTEXTUREREGION_SRCREGIONOUTOFBOUNDS" },
		{ 872, "COPYTEXTUREREGION_INVALIDDSTCOORDINATES" },
		{ 873, "COPYTEXTUREREGION_INVALIDSRCBOX" },
		{ 874, "COPYTEXTUREREGION_FORMATMISMATCH" },
		{ 875, "COPYTEXTUREREGION_EMPTYBOX" },
		{ 876, "COPYTEXTUREREGION_INVALIDCOPYFLAGS" },
		{ 877, "RESOLVESUBRESOURCE_INVALID_SUBRESOURCE_INDEX" },
		{ 878, "RESOLVESUBRESOURCE_INVALID_FORMAT" },
		{ 879, "RESOLVESUBRESOURCE_RESOURCE_MISMATCH" },
		{ 880, "RESOLVESUBRESOURCE_INVALID_SAMPLE_COUNT" },
		{ 881, "CREATECOMPUTEPIPELINESTATE_INVALID_SHADER" },
		{ 882, "CREATECOMPUTEPIPELINESTATE_CS_ROOT_SIGNATURE_MISMATCH" },
		{ 883, "CREATECOMPUTEPIPELINESTATE_MISSING_ROOT_SIGNATURE" },
		{ 884, "CREATEPIPELINESTATE_INVALIDCACHEDBLOB" },
		{ 885, "CREATEPIPELINESTATE_CACHEDBLOBADAPTERMISMATCH" },
		{ 886, "CREATEPIPELINESTATE_CACHEDBLOBDRIVERVERSIONMISMATCH" },
		{ 887, "CREATEPIPELINESTATE_CACHEDBLOBDESCMISMATCH" },
		{ 888, "CREATEPIPELINESTATE_CACHEDBLOBIGNORED" },
		{ 889, "WRITETOSUBRESOURCE_INVALIDHEAP" },
		{ 890, "WRITETOSUBRESOURCE_INVALIDRESOURCE" },
		{ 891, "WRITETOSUBRESOURCE_INVALIDBOX" },
		{ 892, "WRITETOSUBRESOURCE_INVALIDSUBRESOURCE" },
		{ 893, "WRITETOSUBRESOURCE_EMPTYBOX" },
		{ 894, "READFROMSUBRESOURCE_INVALIDHEAP" },
		{ 895, "READFROMSUBRESOURCE_INVALIDRESOURCE" },
		{ 896, "READFROMSUBRESOURCE_INVALIDBOX" },
		{ 897, "READFROMSUBRESOURCE_INVALIDSUBRESOURCE" },
		{ 898, "READFROMSUBRESOURCE_EMPTYBOX" },
		{ 899, "TOO_MANY_NODES_SPECIFIED" },
		{ 900, "INVALID_NODE_INDEX" },
		{ 901, "GETHEAPPROPERTIES_INVALIDRESOURCE" },
		{ 902, "NODE_MASK_MISMATCH" },
		{ 903, "COMMAND_LIST_OUTOFMEMORY" },
		{ 904, "COMMAND_LIST_MULTIPLE_SWAPCHAIN_BUFFER_REFERENCES" },
		{ 905, "COMMAND_LIST_TOO_MANY_SWAPCHAIN_REFERENCES" },
		{ 906, "COMMAND_QUEUE_TOO_MANY_SWAPCHAIN_REFERENCES" },
		{ 907, "EXECUTECOMMANDLISTS_WRONGSWAPCHAINBUFFERREFERENCE" },
		{ 908, "COMMAND_LIST_SETRENDERTARGETS_INVALIDNUMRENDERTARGETS" },
		{ 909, "CREATE_QUEUE_INVALID_TYPE" },
		{ 910, "CREATE_QUEUE_INVALID_FLAGS" },
		{ 911, "CREATESHAREDRESOURCE_INVALIDFLAGS" },
		{ 912, "CREATESHAREDRESOURCE_INVALIDFORMAT" },
		{ 913, "CREATESHAREDHEAP_INVALIDFLAGS" },
		{ 914, "REFLECTSHAREDPROPERTIES_UNRECOGNIZEDPROPERTIES" },
		{ 915, "REFLECTSHAREDPROPERTIES_INVALIDSIZE" },
		{ 916, "REFLECTSHAREDPROPERTIES_INVALIDOBJECT" },
		{ 917, "KEYEDMUTEX_INVALIDOBJECT" },
		{ 918, "KEYEDMUTEX_INVALIDKEY" },
		{ 919, "KEYEDMUTEX_WRONGSTATE" },
		{ 920, "CREATE_QUEUE_INVALID_PRIORITY" },
		{ 921, "OBJECT_DELETED_WHILE_STILL_IN_USE" },
		{ 922, "CREATEPIPELINESTATE_INVALID_FLAGS" },
		{ 923, "HEAP_ADDRESS_RANGE_HAS_NO_RESOURCE" },
		{ 924, "COMMAND_LIST_DRAW_RENDER_TARGET_DELETED" },
		{ 925, "CREATEGRAPHICSPIPELINESTATE_ALL_RENDER_TARGETS_HAVE_UNKNOWN_FORMAT" },
		{ 926, "HEAP_ADDRESS_RANGE_INTERSECTS_MULTIPLE_BUFFERS" },
		{ 927, "EXECUTECOMMANDLISTS_GPU_WRITTEN_READBACK_RESOURCE_MAPPED" },
		{ 929, "UNMAP_RANGE_NOT_EMPTY" },
		{ 930, "MAP_INVALID_NULLRANGE" },
		{ 931, "UNMAP_INVALID_NULLRANGE" },
		{ 932, "NO_GRAPHICS_API_SUPPORT" },
		{ 933, "NO_COMPUTE_API_SUPPORT" },
		{ 934, "RESOLVESUBRESOURCE_RESOURCE_FLAGS_NOT_SUPPORTED" },
		{ 935, "GPU_BASED_VALIDATION_ROOT_ARGUMENT_UNINITIALIZED" },
		{ 936, "GPU_BASED_VALIDATION_DESCRIPTOR_HEAP_INDEX_OUT_OF_BOUNDS" },
		{ 937, "GPU_BASED_VALIDATION_DESCRIPTOR_TABLE_REGISTER_INDEX_OUT_OF_BOUNDS" },
		{ 938, "GPU_BASED_VALIDATION_DESCRIPTOR_UNINITIALIZED" },
		{ 939, "GPU_BASED_VALIDATION_DESCRIPTOR_TYPE_MISMATCH" },
		{ 940, "GPU_BASED_VALIDATION_SRV_RESOURCE_DIMENSION_MISMATCH" },
		{ 941, "GPU_BASED_VALIDATION_UAV_RESOURCE_DIMENSION_MISMATCH" },
		{ 942, "GPU_BASED_VALIDATION_INCOMPATIBLE_RESOURCE_STATE" },
		{ 943, "COPYRESOURCE_NULLDST" },
		{ 944, "COPYRESOURCE_INVALIDDSTRESOURCE" },
		{ 945, "COPYRESOURCE_NULLSRC" },
		{ 946, "COPYRESOURCE_INVALIDSRCRESOURCE" },
		{ 947, "RESOLVESUBRESOURCE_NULLDST" },
		{ 948, "RESOLVESUBRESOURCE_INVALIDDSTRESOURCE" },
		{ 949, "RESOLVESUBRESOURCE_NULLSRC" },
		{ 950, "RESOLVESUBRESOURCE_INVALIDSRCRESOURCE" },
		{ 951, "PIPELINE_STATE_TYPE_MISMATCH" },
		{ 952, "COMMAND_LIST_DISPATCH_ROOT_SIGNATURE_NOT_SET" },
		{ 953, "COMMAND_LIST_DISPATCH_ROOT_SIGNATURE_MISMATCH" },
		{ 954, "RESOURCE_BARRIER_ZERO_BARRIERS" },
		{ 955, "BEGIN_END_EVENT_MISMATCH" },
		{ 956, "RESOURCE_BARRIER_POSSIBLE_BEFORE_AFTER_MISMATCH" },
		{ 957, "RESOURCE_BARRIER_MISMATCHING_BEGIN_END" },
		{ 958, "GPU_BASED_VALIDATION_INVALID_RESOURCE" },
		{ 959, "USE_OF_ZERO_REFCOUNT_OBJECT" },
		{ 960, "OBJECT_EVICTED_WHILE_STILL_IN_USE" },
		{ 961, "GPU_BASED_VALIDATION_ROOT_DESCRIPTOR_ACCESS_OUT_OF_BOUNDS" },
		{ 962, "CREATEPIPELINELIBRARY_INVALIDLIBRARYBLOB" },
		{ 963, "CREATEPIPELINELIBRARY_DRIVERVERSIONMISMATCH" },
		{ 964, "CREATEPIPELINELIBRARY_ADAPTERVERSIONMISMATCH" },
		{ 965, "CREATEPIPELINELIBRARY_UNSUPPORTED" },
		{ 966, "CREATE_PIPELINELIBRARY" },
		{ 967, "LIVE_PIPELINELIBRARY" },
		{ 968, "DESTROY_PIPELINELIBRARY" },
		{ 969, "STOREPIPELINE_NONAME" },
		{ 970, "STOREPIPELINE_DUPLICATENAME" },
		{ 971, "LOADPIPELINE_NAMENOTFOUND" },
		{ 972, "LOADPIPELINE_INVALIDDESC" },
		{ 973, "PIPELINELIBRARY_SERIALIZE_NOTENOUGHMEMORY" },
		{ 974, "CREATEGRAPHICSPIPELINESTATE_PS_OUTPUT_RT_OUTPUT_MISMATCH" },
		{ 975, "SETEVENTONMULTIPLEFENCECOMPLETION_INVALIDFLAGS" },
		{ 976, "CREATE_QUEUE_VIDEO_NOT_SUPPORTED" },
		{ 977, "CREATE_COMMAND_ALLOCATOR_VIDEO_NOT_SUPPORTED" },
		{ 978, "CREATEQUERY_HEAP_VIDEO_DECODE_STATISTICS_NOT_SUPPORTED" },
		{ 979, "CREATE_VIDEODECODECOMMANDLIST" },
		{ 980, "CREATE_VIDEODECODER" },
		{ 981, "CREATE_VIDEODECODESTREAM" },
		{ 982, "LIVE_VIDEODECODECOMMANDLIST" },
		{ 983, "LIVE_VIDEODECODER" },
		{ 984, "LIVE_VIDEODECODESTREAM" },
		{ 985, "DESTROY_VIDEODECODECOMMANDLIST" },
		{ 986, "DESTROY_VIDEODECODER" },
		{ 987, "DESTROY_VIDEODECODESTREAM" },
		{ 988, "DECODE_FRAME_INVALID_PARAMETERS" },
		{ 989, "DEPRECATED_API" },
		{ 990, "RESOURCE_BARRIER_MISMATCHING_COMMAND_LIST_TYPE" },
		{ 991, "COMMAND_LIST_DESCRIPTOR_TABLE_NOT_SET" },
		{ 992, "COMMAND_LIST_ROOT_CONSTANT_BUFFER_VIEW_NOT_SET" },
		{ 993, "COMMAND_LIST_ROOT_SHADER_RESOURCE_VIEW_NOT_SET" },
		{ 994, "COMMAND_LIST_ROOT_UNORDERED_ACCESS_VIEW_NOT_SET" },
		{ 995, "DISCARD_INVALID_SUBRESOURCE_RANGE" },
		{ 996, "DISCARD_ONE_SUBRESOURCE_FOR_MIPS_WITH_RECTS" },
		{ 997, "DISCARD_NO_RECTS_FOR_NON_TEXTURE2D" },
		{ 998, "COPY_ON_SAME_SUBRESOURCE" },
		{ 999, "SETRESIDENCYPRIORITY_INVALID_PAGEABLE" },
		{ 1000, "GPU_BASED_VALIDATION_UNSUPPORTED" },
		{ 1001, "STATIC_DESCRIPTOR_INVALID_DESCRIPTOR_CHANGE" },
		{ 1002, "DATA_STATIC_DESCRIPTOR_INVALID_DATA_CHANGE" },
		{ 1003, "DATA_STATIC_WHILE_SET_AT_EXECUTE_DESCRIPTOR_INVALID_DATA_CHANGE" },
		{ 1004, "EXECUTE_BUNDLE_STATIC_DESCRIPTOR_DATA_STATIC_NOT_SET" },
		{ 1005, "GPU_BASED_VALIDATION_RESOURCE_ACCESS_OUT_OF_BOUNDS" },
		{ 1006, "GPU_BASED_VALIDATION_SAMPLER_MODE_MISMATCH" },
		{ 1007, "CREATE_FENCE_INVALID_FLAGS" },
		{ 1008, "RESOURCE_BARRIER_DUPLICATE_SUBRESOURCE_TRANSITIONS" },
		{ 1009, "SETRESIDENCYPRIORITY_INVALID_PRIORITY" },
		{ 1013, "CREATE_DESCRIPTOR_HEAP_LARGE_NUM_DESCRIPTORS" },
		{ 1014, "BEGIN_EVENT" },
		{ 1015, "END_EVENT" },
		{ 1016, "CREATEDEVICE_DEBUG_LAYER_STARTUP_OPTIONS" },
		{ 1017, "CREATEDEPTHSTENCILSTATE_DEPTHBOUNDSTEST_UNSUPPORTED" },
		{ 1018, "CREATEPIPELINESTATE_DUPLICATE_SUBOBJECT" },
		{ 1019, "CREATEPIPELINESTATE_UNKNOWN_SUBOBJECT" },
		{ 1020, "CREATEPIPELINESTATE_ZERO_SIZE_STREAM" },
		{ 1021, "CREATEPIPELINESTATE_INVALID_STREAM" },
		{ 1022, "CREATEPIPELINESTATE_CANNOT_DEDUCE_TYPE" },
		{ 1023, "COMMAND_LIST_STATIC_DESCRIPTOR_RESOURCE_DIMENSION_MISMATCH" },
		{ 1024, "CREATE_COMMAND_QUEUE_INSUFFICIENT_PRIVILEGE_FOR_GLOBAL_REALTIME" },
		{ 1025, "CREATE_COMMAND_QUEUE_INSUFFICIENT_HARDWARE_SUPPORT_FOR_GLOBAL_REALTIME" },
		{ 1026, "ATOMICCOPYBUFFER_INVALID_ARCHITECTURE" },
		{ 1027, "ATOMICCOPYBUFFER_NULL_DST" },
		{ 1028, "ATOMICCOPYBUFFER_INVALID_DST_RESOURCE_DIMENSION" },
		{ 1029, "ATOMICCOPYBUFFER_DST_RANGE_OUT_OF_BOUNDS" },
		{ 1030, "ATOMICCOPYBUFFER_NULL_SRC" },
		{ 1031, "ATOMICCOPYBUFFER_INVALID_SRC_RESOURCE_DIMENSION" },
		{ 1032, "ATOMICCOPYBUFFER_SRC_RANGE_OUT_OF_BOUNDS" },
		{ 1033, "ATOMICCOPYBUFFER_INVALID_OFFSET_ALIGNMENT" },
		{ 1034, "ATOMICCOPYBUFFER_NULL_DEPENDENT_RESOURCES" },
		{ 1035, "ATOMICCOPYBUFFER_NULL_DEPENDENT_SUBRESOURCE_RANGES" },
		{ 1036, "ATOMICCOPYBUFFER_INVALID_DEPENDENT_RESOURCE" },
		{ 1037, "ATOMICCOPYBUFFER_INVALID_DEPENDENT_SUBRESOURCE_RANGE" },
		{ 1038, "ATOMICCOPYBUFFER_DEPENDENT_SUBRESOURCE_OUT_OF_BOUNDS" },
		{ 1039, "ATOMICCOPYBUFFER_DEPENDENT_RANGE_OUT_OF_BOUNDS" },
		{ 1040, "ATOMICCOPYBUFFER_ZERO_DEPENDENCIES" },
		{ 1041, "DEVICE_CREATE_SHARED_HANDLE_INVALIDARG" },
		{ 1042, "DESCRIPTOR_HANDLE_WITH_INVALID_RESOURCE" },
		{ 1043, "SETDEPTHBOUNDS_INVALIDARGS" },
		{ 1044, "GPU_BASED_VALIDATION_RESOURCE_STATE_IMPRECISE" },
		{ 1045, "COMMAND_LIST_PIPELINE_STATE_NOT_SET" },
		{ 1046, "CREATEGRAPHICSPIPELINESTATE_SHADER_MODEL_MISMATCH" },
		{ 1047, "OBJECT_ACCESSED_WHILE_STILL_IN_USE" },
		{ 1048, "PROGRAMMABLE_MSAA_UNSUPPORTED" },
		{ 1049, "SETSAMPLEPOSITIONS_INVALIDARGS" },
		{ 1050, "RESOLVESUBRESOURCEREGION_INVALID_RECT" },
		{ 1051, "CREATE_VIDEODECODECOMMANDQUEUE" },
		{ 1052, "CREATE_VIDEOPROCESSCOMMANDLIST" },
		{ 1053, "CREATE_VIDEOPROCESSCOMMANDQUEUE" },
		{ 1054, "LIVE_VIDEODECODECOMMANDQUEUE" },
		{ 1055, "LIVE_VIDEOPROCESSCOMMANDLIST" },
		{ 1056, "LIVE_VIDEOPROCESSCOMMANDQUEUE" },
		{ 1057, "DESTROY_VIDEODECODECOMMANDQUEUE" },
		{ 1058, "DESTROY_VIDEOPROCESSCOMMANDLIST" },
		{ 1059, "DESTROY_VIDEOPROCESSCOMMANDQUEUE" },
		{ 1060, "CREATE_VIDEOPROCESSOR" },
		{ 1061, "CREATE_VIDEOPROCESSSTREAM" },
		{ 1062, "LIVE_VIDEOPROCESSOR" },
		{ 1063, "LIVE_VIDEOPROCESSSTREAM" },
		{ 1064, "DESTROY_VIDEOPROCESSOR" },
		{ 1065, "DESTROY_VIDEOPROCESSSTREAM" },
		{ 1066, "PROCESS_FRAME_INVALID_PARAMETERS" },
		{ 1067, "COPY_INVALIDLAYOUT" },
		{ 1068, "CREATE_CRYPTO_SESSION" },
		{ 1069, "CREATE_CRYPTO_SESSION_POLICY" },
		{ 1070, "CREATE_PROTECTED_RESOURCE_SESSION" },
		{ 1071, "LIVE_CRYPTO_SESSION" },
		{ 1072, "LIVE_CRYPTO_SESSION_POLICY" },
		{ 1073, "LIVE_PROTECTED_RESOURCE_SESSION" },
		{ 1074, "DESTROY_CRYPTO_SESSION" },
		{ 1075, "DESTROY_CRYPTO_SESSION_POLICY" },
		{ 1076, "DESTROY_PROTECTED_RESOURCE_SESSION" },
		{ 1077, "PROTECTED_RESOURCE_SESSION_UNSUPPORTED" },
		{ 1078, "FENCE_INVALIDOPERATION" },
		{ 1079, "CREATEQUERY_HEAP_COPY_QUEUE_TIMESTAMPS_NOT_SUPPORTED" },
		{ 1080, "SAMPLEPOSITIONS_MISMATCH_DEFERRED" },
		{ 1081, "SAMPLEPOSITIONS_MISMATCH_RECORDTIME_ASSUMEDFROMFIRSTUSE" },
		{ 1082, "SAMPLEPOSITIONS_MISMATCH_RECORDTIME_ASSUMEDFROMCLEAR" },
		{ 1083, "CREATE_VIDEODECODERHEAP" },
		{ 1084, "LIVE_VIDEODECODERHEAP" },
		{ 1085, "DESTROY_VIDEODECODERHEAP" },
		{ 1086, "OPENEXISTINGHEAP_INVALIDARG_RETURN" },
		{ 1087, "OPENEXISTINGHEAP_OUTOFMEMORY_RETURN" },
		{ 1088, "OPENEXISTINGHEAP_INVALIDADDRESS" },
		{ 1089, "OPENEXISTINGHEAP_INVALIDHANDLE" },
		{ 1090, "WRITEBUFFERIMMEDIATE_INVALID_DEST" },
		{ 1091, "WRITEBUFFERIMMEDIATE_INVALID_MODE" },
		{ 1092, "WRITEBUFFERIMMEDIATE_INVALID_ALIGNMENT" },
		{ 1093, "WRITEBUFFERIMMEDIATE_NOT_SUPPORTED" },
		{ 1094, "SETVIEWINSTANCEMASK_INVALIDARGS" },
		{ 1095, "VIEW_INSTANCING_UNSUPPORTED" },
		{ 1096, "VIEW_INSTANCING_INVALIDARGS" },
		{ 1097, "COPYTEXTUREREGION_MISMATCH_DECODE_REFERENCE_ONLY_FLAG" },
		{ 1098, "COPYRESOURCE_MISMATCH_DECODE_REFERENCE_ONLY_FLAG" },
		{ 1099, "CREATE_VIDEO_DECODE_HEAP_CAPS_FAILURE" },
		{ 1100, "CREATE_VIDEO_DECODE_HEAP_CAPS_UNSUPPORTED" },
		{ 1101, "VIDEO_DECODE_SUPPORT_INVALID_INPUT" },
		{ 1102, "CREATE_VIDEO_DECODER_UNSUPPORTED" },
		{ 1103, "CREATEGRAPHICSPIPELINESTATE_METADATA_ERROR" },
		{ 1104, "CREATEGRAPHICSPIPELINESTATE_VIEW_INSTANCING_VERTEX_SIZE_EXCEEDED" },
		{ 1105, "CREATEGRAPHICSPIPELINESTATE_RUNTIME_INTERNAL_ERROR" },
		{ 1106, "NO_VIDEO_API_SUPPORT" },
		{ 1107, "VIDEO_PROCESS_SUPPORT_INVALID_INPUT" },
		{ 1108, "CREATE_VIDEO_PROCESSOR_CAPS_FAILURE" },
		{ 1109, "VIDEO_PROCESS_SUPPORT_UNSUPPORTED_FORMAT" },
		{ 1110, "VIDEO_DECODE_FRAME_INVALID_ARGUMENT" },
		{ 1111, "ENQUEUE_MAKE_RESIDENT_INVALID_FLAGS" },
		{ 1112, "OPENEXISTINGHEAP_UNSUPPORTED" },
		{ 1113, "VIDEO_PROCESS_FRAMES_INVALID_ARGUMENT" },
		{ 1114, "VIDEO_DECODE_SUPPORT_UNSUPPORTED" },
		{ 1115, "CREATE_COMMANDRECORDER" },
		{ 1116, "LIVE_COMMANDRECORDER" },
		{ 1117, "DESTROY_COMMANDRECORDER" },
		{ 1118, "CREATE_COMMAND_RECORDER_VIDEO_NOT_SUPPORTED" },
		{ 1119, "CREATE_COMMAND_RECORDER_INVALID_SUPPORT_FLAGS" },
		{ 1120, "CREATE_COMMAND_RECORDER_INVALID_FLAGS" },
		{ 1121, "CREATE_COMMAND_RECORDER_MORE_RECORDERS_THAN_LOGICAL_PROCESSORS" },
		{ 1122, "CREATE_COMMANDPOOL" },
		{ 1123, "LIVE_COMMANDPOOL" },
		{ 1124, "DESTROY_COMMANDPOOL" },
		{ 1125, "CREATE_COMMAND_POOL_INVALID_FLAGS" },
		{ 1126, "CREATE_COMMAND_LIST_VIDEO_NOT_SUPPORTED" },
		{ 1127, "COMMAND_RECORDER_SUPPORT_FLAGS_MISMATCH" },
		{ 1128, "COMMAND_RECORDER_CONTENTION" },
		{ 1129, "COMMAND_RECORDER_USAGE_WITH_CREATECOMMANDLIST_COMMAND_LIST" },
		{ 1130, "COMMAND_ALLOCATOR_USAGE_WITH_CREATECOMMANDLIST1_COMMAND_LIST" },
		{ 1131, "CANNOT_EXECUTE_EMPTY_COMMAND_LIST" },
		{ 1132, "CANNOT_RESET_COMMAND_POOL_WITH_OPEN_COMMAND_LISTS" },
		{ 1133, "CANNOT_USE_COMMAND_RECORDER_WITHOUT_CURRENT_TARGET" },
		{ 1134, "CANNOT_CHANGE_COMMAND_RECORDER_TARGET_WHILE_RECORDING" },
		{ 1135, "COMMAND_POOL_SYNC" },
		{ 1136, "EVICT_UNDERFLOW" },
		{ 1137, "CREATE_META_COMMAND" },
		{ 1138, "LIVE_META_COMMAND" },
		{ 1139, "DESTROY_META_COMMAND" },
		{ 1140, "COPYBUFFERREGION_INVALID_DST_RESOURCE" },
		{ 1141, "COPYBUFFERREGION_INVALID_SRC_RESOURCE" },
		{ 1142, "ATOMICCOPYBUFFER_INVALID_DST_RESOURCE" },
		{ 1143, "ATOMICCOPYBUFFER_INVALID_SRC_RESOURCE" },
		{ 1144, "CREATEPLACEDRESOURCEONBUFFER_NULL_BUFFER" },
		{ 1145, "CREATEPLACEDRESOURCEONBUFFER_NULL_RESOURCE_DESC" },
		{ 1146, "CREATEPLACEDRESOURCEONBUFFER_UNSUPPORTED" },
		{ 1147, "CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_DIMENSION" },
		{ 1148, "CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_FLAGS" },
		{ 1149, "CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_OFFSET" },
		{ 1150, "CREATEPLACEDRESOURCEONBUFFER_INVALID_RESOURCE_DIMENSION" },
		{ 1151, "CREATEPLACEDRESOURCEONBUFFER_INVALID_RESOURCE_FLAGS" },
		{ 1152, "CREATEPLACEDRESOURCEONBUFFER_OUTOFMEMORY_RETURN" },
		{ 1153, "CANNOT_CREATE_GRAPHICS_AND_VIDEO_COMMAND_RECORDER" },
		{ 1154, "UPDATETILEMAPPINGS_POSSIBLY_MISMATCHING_PROPERTIES" },
		{ 1155, "CREATE_COMMAND_LIST_INVALID_COMMAND_LIST_TYPE" },
		{ 1156, "CLEARUNORDEREDACCESSVIEW_INCOMPATIBLE_WITH_STRUCTURED_BUFFERS" },
		{ 1157, "COMPUTE_ONLY_DEVICE_OPERATION_UNSUPPORTED" },
		{ 1158, "BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INVALID" },
		{ 1159, "EMIT_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_INVALID" },
		{ 1160, "COPY_RAYTRACING_ACCELERATION_STRUCTURE_INVALID" },
		{ 1161, "DISPATCH_RAYS_INVALID" },
		{ 1162, "GET_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO_INVALID" },
		{ 1163, "CREATE_LIFETIMETRACKER" },
		{ 1164, "LIVE_LIFETIMETRACKER" },
		{ 1165, "DESTROY_LIFETIMETRACKER" },
		{ 1166, "DESTROYOWNEDOBJECT_OBJECTNOTOWNED" },
		{ 1167, "CREATE_TRACKEDWORKLOAD" },
		{ 1168, "LIVE_TRACKEDWORKLOAD" },
		{ 1169, "DESTROY_TRACKEDWORKLOAD" },
		{ 1170, "RENDER_PASS_ERROR" },
		{ 1171, "META_COMMAND_ID_INVALID" },
		{ 1172, "META_COMMAND_UNSUPPORTED_PARAMS" },
		{ 1173, "META_COMMAND_FAILED_ENUMERATION" },
		{ 1174, "META_COMMAND_PARAMETER_SIZE_MISMATCH" },
		{ 1175, "UNINITIALIZED_META_COMMAND" },
		{ 1176, "META_COMMAND_INVALID_GPU_VIRTUAL_ADDRESS" },
		{ 1177, "CREATE_VIDEOENCODECOMMANDLIST" },
		{ 1178, "LIVE_VIDEOENCODECOMMANDLIST" },
		{ 1179, "DESTROY_VIDEOENCODECOMMANDLIST" },
		{ 1180, "CREATE_VIDEOENCODECOMMANDQUEUE" },
		{ 1181, "LIVE_VIDEOENCODECOMMANDQUEUE" },
		{ 1182, "DESTROY_VIDEOENCODECOMMANDQUEUE" },
		{ 1183, "CREATE_VIDEOMOTIONESTIMATOR" },
		{ 1184, "LIVE_VIDEOMOTIONESTIMATOR" },
		{ 1185, "DESTROY_VIDEOMOTIONESTIMATOR" },
		{ 1186, "CREATE_VIDEOMOTIONVECTORHEAP" },
		{ 1187, "LIVE_VIDEOMOTIONVECTORHEAP" },
		{ 1188, "DESTROY_VIDEOMOTIONVECTORHEAP" },
		{ 1189, "MULTIPLE_TRACKED_WORKLOADS" },
		{ 1190, "MULTIPLE_TRACKED_WORKLOAD_PAIRS" },
		{ 1191, "OUT_OF_ORDER_TRACKED_WORKLOAD_PAIR" },
		{ 1192, "CANNOT_ADD_TRACKED_WORKLOAD" },
		{ 1193, "INCOMPLETE_TRACKED_WORKLOAD_PAIR" },
		{ 1194, "CREATE_STATE_OBJECT_ERROR" },
		{ 1195, "GET_SHADER_IDENTIFIER_ERROR" },
		{ 1196, "GET_SHADER_STACK_SIZE_ERROR" },
		{ 1197, "GET_PIPELINE_STACK_SIZE_ERROR" },
		{ 1198, "SET_PIPELINE_STACK_SIZE_ERROR" },
		{ 1199, "GET_SHADER_IDENTIFIER_SIZE_INVALID" },
		{ 1200, "CHECK_DRIVER_MATCHING_IDENTIFIER_INVALID" },
		{ 1201, "CHECK_DRIVER_MATCHING_IDENTIFIER_DRIVER_REPORTED_ISSUE" },
		{ 1202, "RENDER_PASS_INVALID_RESOURCE_BARRIER" },
		{ 1203, "RENDER_PASS_DISALLOWED_API_CALLED" },
		{ 1204, "RENDER_PASS_CANNOT_NEST_RENDER_PASSES" },
		{ 1205, "RENDER_PASS_CANNOT_END_WITHOUT_BEGIN" },
		{ 1206, "RENDER_PASS_CANNOT_CLOSE_COMMAND_LIST" },
		{ 1207, "RENDER_PASS_GPU_WORK_WHILE_SUSPENDED" },
		{ 1208, "RENDER_PASS_MISMATCHING_SUSPEND_RESUME" },
		{ 1209, "RENDER_PASS_NO_PRIOR_SUSPEND_WITHIN_EXECUTECOMMANDLISTS" },
		{ 1210, "RENDER_PASS_NO_SUBSEQUENT_RESUME_WITHIN_EXECUTECOMMANDLISTS" },
		{ 1211, "TRACKED_WORKLOAD_COMMAND_QUEUE_MISMATCH" },
		{ 1212, "TRACKED_WORKLOAD_NOT_SUPPORTED" },
		{ 1213, "RENDER_PASS_MISMATCHING_NO_ACCESS" },
		{ 1214, "RENDER_PASS_UNSUPPORTED_RESOLVE" },
		{ 1215, "CLEARUNORDEREDACCESSVIEW_INVALID_RESOURCE_PTR" },
		{ 1216, "WINDOWS7_FENCE_OUTOFORDER_SIGNAL" },
		{ 1217, "WINDOWS7_FENCE_OUTOFORDER_WAIT" },
		{ 1218, "VIDEO_CREATE_MOTION_ESTIMATOR_INVALID_ARGUMENT" },
		{ 1219, "VIDEO_CREATE_MOTION_VECTOR_HEAP_INVALID_ARGUMENT" },
		{ 1220, "ESTIMATE_MOTION_INVALID_ARGUMENT" },
		{ 1221, "RESOLVE_MOTION_VECTOR_HEAP_INVALID_ARGUMENT" },
		{ 1222, "GETGPUVIRTUALADDRESS_INVALID_HEAP_TYPE" },
		{ 1223, "SET_BACKGROUND_PROCESSING_MODE_INVALID_ARGUMENT" },
		{ 1224, "CREATE_COMMAND_LIST_INVALID_COMMAND_LIST_TYPE_FOR_FEATURE_LEVEL" },
		{ 1225, "CREATE_VIDEOEXTENSIONCOMMAND" },
		{ 1226, "LIVE_VIDEOEXTENSIONCOMMAND" },
		{ 1227, "DESTROY_VIDEOEXTENSIONCOMMAND" },
		{ 1228, "INVALID_VIDEO_EXTENSION_COMMAND_ID" },
		{ 1229, "VIDEO_EXTENSION_COMMAND_INVALID_ARGUMENT" },
		{ 1230, "CREATE_ROOT_SIGNATURE_NOT_UNIQUE_IN_DXIL_LIBRARY" },
		{ 1231, "VARIABLE_SHADING_RATE_NOT_ALLOWED_WITH_TIR" },
		{ 1232, "GEOMETRY_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE" },
		{ 1233, "RSSETSHADING_RATE_INVALID_SHADING_RATE" },
		{ 1234, "RSSETSHADING_RATE_SHADING_RATE_NOT_PERMITTED_BY_CAP" },
		{ 1235, "RSSETSHADING_RATE_INVALID_COMBINER" },
		{ 1236, "RSSETSHADINGRATEIMAGE_REQUIRES_TIER_2" },
		{ 1237, "RSSETSHADINGRATE_REQUIRES_TIER_1" },
		{ 1238, "SHADING_RATE_IMAGE_INCORRECT_FORMAT" },
		{ 1239, "SHADING_RATE_IMAGE_INCORRECT_ARRAY_SIZE" },
		{ 1240, "SHADING_RATE_IMAGE_INCORRECT_MIP_LEVEL" },
		{ 1241, "SHADING_RATE_IMAGE_INCORRECT_SAMPLE_COUNT" },
		{ 1242, "SHADING_RATE_IMAGE_INCORRECT_SAMPLE_QUALITY" },
		{ 1243, "NON_RETAIL_SHADER_MODEL_WONT_VALIDATE" },
		{ 1244, "CREATEGRAPHICSPIPELINESTATE_AS_ROOT_SIGNATURE_MISMATCH" },
		{ 1245, "CREATEGRAPHICSPIPELINESTATE_MS_ROOT_SIGNATURE_MISMATCH" },
		{ 1246, "ADD_TO_STATE_OBJECT_ERROR" },
		{ 1247, "CREATE_PROTECTED_RESOURCE_SESSION_INVALID_ARGUMENT" },
		{ 1248, "CREATEGRAPHICSPIPELINESTATE_MS_PSO_DESC_MISMATCH" },
		{ 1249, "CREATEPIPELINESTATE_MS_INCOMPLETE_TYPE" },
		{ 1250, "CREATEGRAPHICSPIPELINESTATE_AS_NOT_MS_MISMATCH" },
		{ 1251, "CREATEGRAPHICSPIPELINESTATE_MS_NOT_PS_MISMATCH" },
		{ 1252, "NONZERO_SAMPLER_FEEDBACK_MIP_REGION_WITH_INCOMPATIBLE_FORMAT" },
		{ 1253, "CREATEGRAPHICSPIPELINESTATE_INPUTLAYOUT_SHADER_MISMATCH" },
		{ 1254, "EMPTY_DISPATCH" },
		{ 1255, "RESOURCE_FORMAT_REQUIRES_SAMPLER_FEEDBACK_CAPABILITY" },
		{ 1256, "SAMPLER_FEEDBACK_MAP_INVALID_MIP_REGION" },
		{ 1257, "SAMPLER_FEEDBACK_MAP_INVALID_DIMENSION" },
		{ 1258, "SAMPLER_FEEDBACK_MAP_INVALID_SAMPLE_COUNT" },
		{ 1259, "SAMPLER_FEEDBACK_MAP_INVALID_SAMPLE_QUALITY" },
		{ 1260, "SAMPLER_FEEDBACK_MAP_INVALID_LAYOUT" },
		{ 1261, "SAMPLER_FEEDBACK_MAP_REQUIRES_UNORDERED_ACCESS_FLAG" },
		{ 1262, "SAMPLER_FEEDBACK_CREATE_UAV_NULL_ARGUMENTS" },
		{ 1263, "SAMPLER_FEEDBACK_UAV_REQUIRES_SAMPLER_FEEDBACK_CAPABILITY" },
		{ 1264, "SAMPLER_FEEDBACK_CREATE_UAV_REQUIRES_FEEDBACK_MAP_FORMAT" },
		{ 1265, "CREATEMESHSHADER_INVALIDSHADERBYTECODE" },
		{ 1266, "CREATEMESHSHADER_OUTOFMEMORY" },
		{ 1267, "CREATEMESHSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE" },
		{ 1268, "RESOLVESUBRESOURCE_SAMPLER_FEEDBACK_TRANSCODE_INVALID_FORMAT" },
		{ 1269, "RESOLVESUBRESOURCE_SAMPLER_FEEDBACK_INVALID_MIP_LEVEL_COUNT" },
		{ 1270, "RESOLVESUBRESOURCE_SAMPLER_FEEDBACK_TRANSCODE_ARRAY_SIZE_MISMATCH" },
		{ 1271, "SAMPLER_FEEDBACK_CREATE_UAV_MISMATCHING_TARGETED_RESOURCE" },
		{ 1272, "CREATEMESHSHADER_OUTPUTEXCEEDSMAXSIZE" },
		{ 1273, "CREATEMESHSHADER_GROUPSHAREDEXCEEDSMAXSIZE" },
		{ 1274, "VERTEX_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE" },
		{ 1275, "MESH_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE" },
		{ 1276, "CREATEMESHSHADER_MISMATCHEDASMSPAYLOADSIZE" },
		{ 1277, "CREATE_ROOT_SIGNATURE_UNBOUNDED_STATIC_DESCRIPTORS" },
		{ 1278, "CREATEAMPLIFICATIONSHADER_INVALIDSHADERBYTECODE" },
		{ 1279, "CREATEAMPLIFICATIONSHADER_OUTOFMEMORY" },
		{ 1280, "CREATE_SHADERCACHESESSION" },
		{ 1281, "LIVE_SHADERCACHESESSION" },
		{ 1282, "DESTROY_SHADERCACHESESSION" },
		{ 1283, "CREATESHADERCACHESESSION_INVALIDARGS" },
		{ 1284, "CREATESHADERCACHESESSION_DISABLED" },
		{ 1285, "CREATESHADERCACHESESSION_ALREADYOPEN" },
		{ 1286, "SHADERCACHECONTROL_DEVELOPERMODE" },
		{ 1287, "SHADERCACHECONTROL_INVALIDFLAGS" },
		{ 1288, "SHADERCACHECONTROL_STATEALREADYSET" },
		{ 1289, "SHADERCACHECONTROL_IGNOREDFLAG" },
		{ 1290, "SHADERCACHESESSION_STOREVALUE_ALREADYPRESENT" },
		{ 1291, "SHADERCACHESESSION_STOREVALUE_HASHCOLLISION" },
		{ 1292, "SHADERCACHESESSION_STOREVALUE_CACHEFULL" },
		{ 1293, "SHADERCACHESESSION_FINDVALUE_NOTFOUND" },
		{ 1294, "SHADERCACHESESSION_CORRUPT" },
		{ 1295, "SHADERCACHESESSION_DISABLED" },
		{ 1296, "OVERSIZED_DISPATCH" },
		{ 1297, "CREATE_VIDEOENCODER" },
		{ 1298, "LIVE_VIDEOENCODER" },
		{ 1299, "DESTROY_VIDEOENCODER" },
		{ 1300, "CREATE_VIDEOENCODERHEAP" },
		{ 1301, "LIVE_VIDEOENCODERHEAP" },
		{ 1302, "DESTROY_VIDEOENCODERHEAP" },
		{ 1303, "COPYTEXTUREREGION_MISMATCH_ENCODE_REFERENCE_ONLY_FLAG" },
		{ 1304, "COPYRESOURCE_MISMATCH_ENCODE_REFERENCE_ONLY_FLAG" },
		{ 1305, "ENCODE_FRAME_INVALID_PARAMETERS" },
		{ 1306, "ENCODE_FRAME_UNSUPPORTED_PARAMETERS" },
		{ 1307, "RESOLVE_ENCODER_OUTPUT_METADATA_INVALID_PARAMETERS" },
		{ 1308, "RESOLVE_ENCODER_OUTPUT_METADATA_UNSUPPORTED_PARAMETERS" },
		{ 1309, "CREATE_VIDEO_ENCODER_INVALID_PARAMETERS" },
		{ 1310, "CREATE_VIDEO_ENCODER_UNSUPPORTED_PARAMETERS" },
		{ 1311, "CREATE_VIDEO_ENCODER_HEAP_INVALID_PARAMETERS" },
		{ 1312, "CREATE_VIDEO_ENCODER_HEAP_UNSUPPORTED_PARAMETERS" },
		{ 1313, "CREATECOMMANDLIST_NULL_COMMANDALLOCATOR" },
		{ 1314, "CLEAR_UNORDERED_ACCESS_VIEW_INVALID_DESCRIPTOR_HANDLE" },
		{ 1315, "DESCRIPTOR_HEAP_NOT_SHADER_VISIBLE" },
		{ 1316, "CREATEBLENDSTATE_BLENDOP_WARNING" },
		{ 1317, "CREATEBLENDSTATE_BLENDOPALPHA_WARNING" },
		{ 1318, "WRITE_COMBINE_PERFORMANCE_WARNING" },
		{ 1319, "RESOLVE_QUERY_INVALID_QUERY_STATE" },
		{ 1320, "SETPRIVATEDATA_NO_ACCESS" },
		{ 1321, "COMMAND_LIST_STATIC_DESCRIPTOR_SAMPLER_MODE_MISMATCH" },
		{ 1322, "GETCOPYABLEFOOTPRINTS_UNSUPPORTED_BUFFER_WIDTH" },
		{ 1323, "CREATEMESHSHADER_TOPOLOGY_MISMATCH" },
		{ 1324, "VRS_SUM_COMBINER_REQUIRES_CAPABILITY" },
		{ 1325, "SETTING_SHADING_RATE_FROM_MS_REQUIRES_CAPABILITY" },
		{ 1326, "SHADERCACHESESSION_SHADERCACHEDELETE_NOTSUPPORTED" },
		{ 1327, "SHADERCACHECONTROL_SHADERCACHECLEAR_NOTSUPPORTED" },
		{ 1328, "CREATERESOURCE_STATE_IGNORED" },
		{ 1329, "UNUSED_CROSS_EXECUTE_SPLIT_BARRIER" },
		{ 1330, "DEVICE_OPEN_SHARED_HANDLE_ACCESS_DENIED" },
		{ 1331, "INCOMPATIBLE_BARRIER_VALUES" },
		{ 1332, "INCOMPATIBLE_BARRIER_ACCESS" },
		{ 1333, "INCOMPATIBLE_BARRIER_SYNC" },
		{ 1334, "INCOMPATIBLE_BARRIER_LAYOUT" },
		{ 1335, "INCOMPATIBLE_BARRIER_TYPE" },
		{ 1336, "OUT_OF_BOUNDS_BARRIER_SUBRESOURCE_RANGE" },
		{ 1337, "INCOMPATIBLE_BARRIER_RESOURCE_DIMENSION" },
		{ 1338, "SET_SCISSOR_RECTS_INVALID_RECT" },
		{ 1339, "SHADING_RATE_SOURCE_REQUIRES_DIMENSION_TEXTURE2D" },
		{ 1340, "BUFFER_BARRIER_SUBREGION_OUT_OF_BOUNDS" },
		{ 1341, "UNSUPPORTED_BARRIER_LAYOUT" },
		{ 1342, "CREATERESOURCEANDHEAP_INVALID_PARAMETERS" },
		{ 1343, "ENHANCED_BARRIERS_NOT_SUPPORTED" },
		{ 1344, "CAST_TARGET_TEXEL_SIZE_MISMATCH" },
		{ 1345, "CAST_TO_PLANAR_NOT_SUPORTED" },
		{ 1346, "LEGACY_BARRIER_VALIDATION_FORCED_ON" },
		{ 1347, "EMPTY_ROOT_DESCRIPTOR_TABLE" },
		{ 1348, "COMMAND_LIST_DRAW_ELEMENT_OFFSET_UNALIGNED" },
		{ 1349, "ALPHA_BLEND_FACTOR_NOT_SUPPORTED" },
		{ 1350, "D3D12_MESSAGES_END" }
	};

	return D3D12_MESSAGE_ID_ToStringMapping[size_t(ID)];
}

Context::Features::Features(ID3D12Device* device)
{
	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS, &d3d12Options, sizeof(d3d12Options)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_D3D12_OPTIONS.");

	featureLevels.NumFeatureLevels = _countof(featureLevelsList);
	featureLevels.pFeatureLevelsRequested = featureLevelsList;
	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_FEATURE_LEVELS, &featureLevels, sizeof(featureLevels)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_FEATURE_LEVELS.");

	for (uint32_t i = 0; i <= uint32_t(DXGI_FORMAT_B4G4R4A4_UNORM); i++)
	{
		D3D12_FEATURE_DATA_FORMAT_SUPPORT formatSupport = { DXGI_FORMAT(i), D3D12_FORMAT_SUPPORT1_NONE, D3D12_FORMAT_SUPPORT2_NONE };
		HRESULT res = device->CheckFeatureSupport(D3D12_FEATURE_FORMAT_SUPPORT, &formatSupport, sizeof(formatSupport));
		if (res != S_OK && res != E_FAIL && res != E_INVALIDARG)
		{
			MIRU_WARN(res, "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_FORMAT_SUPPORT.");
		}
		formatSupports.push_back(formatSupport);

		std::vector<D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS> _multisampleQualityLevels;
		for (base::Image::SampleCountBit j = base::Image::SampleCountBit::SAMPLE_COUNT_1_BIT;
			j <= base::Image::SampleCountBit::SAMPLE_COUNT_8_BIT; j = base::Image::SampleCountBit(uint32_t(j) * 2))
		{
			D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS multisampleQualityLevel = { DXGI_FORMAT(i), UINT(j) };
			res = device->CheckFeatureSupport(D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS, &multisampleQualityLevel, sizeof(multisampleQualityLevel));
			if (res != S_OK && res != E_FAIL && res != E_INVALIDARG)
			{
				MIRU_WARN(res, "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS.");
			}
			_multisampleQualityLevels.push_back(multisampleQualityLevel);
		}
		multisampleQualityLevels.push_back(_multisampleQualityLevels);

		D3D12_FEATURE_DATA_FORMAT_INFO formatInfo = { DXGI_FORMAT(i), 0 };
		res = device->CheckFeatureSupport(D3D12_FEATURE_FORMAT_INFO, &formatInfo, sizeof(formatInfo));
		if (res != S_OK && res != E_FAIL && res != E_INVALIDARG)
		{
			MIRU_WARN(res, "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_FORMAT_INFO.");
		}
		formatInfos.push_back(formatInfo);
	}

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT, &gpuVirtualAddressSupport, sizeof(gpuVirtualAddressSupport)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT.");

	shaderModel.HighestShaderModel = D3D_SHADER_MODEL_6_7;
	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_SHADER_MODEL, &shaderModel, sizeof(shaderModel)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_SHADER_MODEL.");

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS1, &d3d12Options1, sizeof(d3d12Options1)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_D3D12_OPTIONS1.");

	protectedResourceSessionSupport.NodeIndex = 0;
	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_SUPPORT, &protectedResourceSessionSupport, sizeof(protectedResourceSessionSupport)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_SUPPORT.");

	rootSignature.HighestVersion = D3D_ROOT_SIGNATURE_VERSION_1_1;
	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_ROOT_SIGNATURE, &rootSignature, sizeof(rootSignature)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_ROOT_SIGNATURE.");

	architecture1.NodeIndex = 0;
	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_ARCHITECTURE1, &architecture1, sizeof(architecture1)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_ARCHITECTURE1.");

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS2, &d3d12Options2, sizeof(d3d12Options2)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_D3D12_OPTIONS2.");

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_SHADER_CACHE, &shaderCache, sizeof(shaderCache)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_SHADER_CACHE.");

	for (uint32_t i = 0; i <= D3D12_COMMAND_LIST_TYPE_VIDEO_ENCODE; i++)
	{
		std::vector<D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY> _commandQueuePriorities;
		for (uint32_t j = 0; j < 1000000; j *= 100)
		{
			D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY commandQueuePriority = { D3D12_COMMAND_LIST_TYPE(i), UINT(D3D12_COMMAND_QUEUE_PRIORITY(j)), false };
			MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_COMMAND_QUEUE_PRIORITY, &commandQueuePriority, sizeof(commandQueuePriority)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_COMMAND_QUEUE_PRIORITY.");
			_commandQueuePriorities.push_back(commandQueuePriority);
			j = (j == 0 ? 1 : j);
		}
		commandQueuePriorities.push_back(_commandQueuePriorities);
	}

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS3, &d3d12Options3, sizeof(d3d12Options3)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_D3D12_OPTIONS3.");

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_EXISTING_HEAPS, &existingHeaps, sizeof(existingHeaps)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_EXISTING_HEAPS.");

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS4, &d3d12Options4, sizeof(d3d12Options4)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_D3D12_OPTIONS4.");

	serialisation.NodeIndex = 0;
	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_SERIALIZATION, &serialisation, sizeof(serialisation)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_SERIALIZATION.");

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_CROSS_NODE, &crossNode, sizeof(crossNode)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_CROSS_NODE.");

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS5, &d3d12Options5, sizeof(d3d12Options5)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_D3D12_OPTIONS5.");

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_DISPLAYABLE, &displayable, sizeof(displayable)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_DISPLAYABLE.");

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS6, &d3d12Options6, sizeof(d3d12Options6)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_D3D12_OPTIONS6.");

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS7, &d3d12Options7, sizeof(d3d12Options7)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_D3D12_OPTIONS7.");

	protectedResourceSessionTypeCount.NodeIndex = 0;
	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPE_COUNT, &protectedResourceSessionTypeCount, sizeof(protectedResourceSessionTypeCount)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPE_COUNT.");

	protectedResourceSessionTypes.NodeIndex = protectedResourceSessionTypeCount.NodeIndex;
	protectedResourceSessionTypes.Count = protectedResourceSessionTypeCount.Count;
	protectedResourceSessionTypesGuids.resize(protectedResourceSessionTypes.Count);
	protectedResourceSessionTypes.pTypes = protectedResourceSessionTypesGuids.data();
	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPES, &protectedResourceSessionTypes, sizeof(protectedResourceSessionTypes)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPES.");

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS8, &d3d12Options8, sizeof(d3d12Options8)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_D3D12_OPTIONS8.");

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS9, &d3d12Options9, sizeof(d3d12Options9)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_D3D12_OPTIONS9.");

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS10, &d3d12Options10, sizeof(d3d12Options10)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_D3D12_OPTIONS10.");

	MIRU_WARN(device->CheckFeatureSupport(D3D12_FEATURE_D3D12_OPTIONS11, &d3d12Options11, sizeof(d3d12Options11)), "WARN: D3D12: Unable to CheckFeatureSupport for D3D12_FEATURE_D3D12_OPTIONS11.");
}
#endif
